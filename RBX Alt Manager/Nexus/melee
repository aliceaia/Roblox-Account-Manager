settings().Rendering.QualityLevel = 1
local UGS = UserSettings():GetService "UserGameSettings"
UGS.MasterVolume = 0

CargoShipper = Instance.new("ScreenGui")
Title = Instance.new("TextLabel")

CargoShipper.Name = "CargoShipper"
CargoShipper.Parent = game.CoreGui
CargoShipper.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

Title.Name = "Title"
Title.Parent = CargoShipper
Title.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Title.BackgroundTransparency = 100.000
Title.BorderSizePixel = 0
Title.Size = UDim2.new(0, 189, 0, 52)
Title.Position = UDim2.new(0.225, 0, 0.922, 0)
Title.FontFace = Font.new("rbxasset://fonts/families/PressStart2P.json", Enum.FontWeight.Bold)
Title.Text = "RAM LOADED"
Title.TextColor3 = Color3.fromRGB(217, 88, 28)
Title.TextSize = 14.000
Title.TextWrapped = true

local level = game:GetService("Players").LocalPlayer.Data.Level.Value
local Player = game:GetService("Players").LocalPlayer.Name
local des = "http://localhost:7963/SetDescription?Account="
local ali = "http://localhost:7963/SetAlias?Account="
local sea
if game.PlaceId == 2753915549 then
    sea = 1
elseif game.PlaceId == 4442272183 then
    sea = 2
elseif game.PlaceId == 7449423635 then
    sea = 3
end
syn.request(
    {
        Url = ali .. Player,
        Method = "POST",
        Body = tostring(sea)
    }
)

local exp = game:GetService("Players").LocalPlayer.Data.Exp.Value
-- local Getdes = "http://localhost:7963/GetDescription?Account="
-- local melee
-- for i,v in pairs(game:GetService("Players").LocalPlayer.Character:GetDescendants()) do
-- if v:IsA("Tool") then
-- melee = v.Name
-- end
-- end
local melee
local mlcount = 0
local ds = false
local sh = false
local sk = false
local ec = false
local dt = false
local gh = false
while true do
    -- for i,v in pairs(game:GetService("Players").LocalPlayer.Character:GetDescendants()) do
    -- if v:IsA("Tool") then
    -- melee2 = v.Name
    -- end
    -- end
    -- if #game:GetService("Players"):GetPlayers() > 5 then
    -- wait(60)
    -- local Servers =
    -- game.HttpService:JSONDecode(
    -- game:HttpGet(
    -- "https://games.roblox.com/v1/games/" .. game.PlaceId .. "/servers/Public?sortOrder=Asc&limit=100"
    -- )
    -- )
    -- for i, v in pairs(Servers.data) do
    -- if v.playing ~= nil then
    -- if v.playing < 5 then
    -- game:GetService("StarterGui"):SetCore(
    -- "SendNotification",
    -- {
    -- -- Send a notification that it turned off
    -- Title = "Teleport",
    -- Text = "Wait for change server."
    -- }
    -- )
    -- --print(game.JobId)
    -- game:GetService("TeleportService"):TeleportToPlaceInstance(
    -- game.PlaceId,
    -- v.id,
    -- game:GetService("Players").LocalPlayer
    -- )
    -- --game:GetService('TeleportService'):TeleportToPlaceInstance(game.PlaceId, v.id)
    -- break
    -- end
    -- end
    -- end
    -- end
    if ds == false then
        local args = {
            [1] = "BuyDeathStep",
            [2] = true
        }

        DeathStep = game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
        if DeathStep == 1 then
            ds = true
            mlcount = mlcount + 1
        end
        wait(0.2)
    end

    if sh == false then
        local args = {
            [1] = "BuySuperhuman",
            [2] = true
        }

        Superhuman = game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
        if Superhuman == 1 then
            sh = true
            mlcount = mlcount + 1
        end
        wait(0.2)
    end

    if sk == false then
        local args = {
            [1] = "BuySharkmanKarate",
            [2] = true
        }

        SharkmanKarate = game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
        if SharkmanKarate == 1 then
            sk = true
            mlcount = mlcount + 1
        end
        wait(0.2)
    end

    if ec == false then
        local args = {
            [1] = "BuyElectricClaw",
            [2] = true
        }

        ElectricClaw = game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
        if ElectricClaw == 1 then
            ec = true
            mlcount = mlcount + 1
        end
        wait(0.2)
    end

    if dt == false then
        local args = {
            [1] = "BuyDragonTalon",
            [2] = true
        }

        DragonTalon = game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
        if type(DragonTalon) == "number" then
            if DragonTalon == 1 then
                dt = true
                mlcount = mlcount + 1
            end
        end
        wait(0.2)
    end

    if gh == false then
        local args = {
            [1] = "BuyGodhuman",
            [2] = true
        }

        Godhuman = game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
        if type(Godhuman) == "number" then
            if Godhuman == 1 then
                gh = true
                melee = "Godhuman"
            end
        end
    end
    local sea2
    if game.PlaceId == 2753915549 then
        sea2 = 1
    elseif game.PlaceId == 4442272183 then
        sea2 = 2
    elseif game.PlaceId == 7449423635 then
        sea2 = 3
    end
    if sea2 ~= sea then
        sea = sea2
        syn.request(
            {
                Url = ali .. Player,
                Method = "POST",
                Body = tostring(sea)
            }
        )
    end
    if game:GetService("Players").LocalPlayer.Data.Level.Value > level then
        level = game:GetService("Players").LocalPlayer.Data.Level.Value
        exp = game:GetService("Players").LocalPlayer.Data.Exp.Value
        syn.request(
            {
                Url = des .. Player,
                Method = "POST",
                Body = tostring(level) .. " " .. tostring(mlcount) .. " " .. os.date("%m/%d/%Y %I:%M:%S %p")
            }
        )
        wait(1)
    end
    if game:GetService("Players").LocalPlayer.Data.Level.Value > 2449 then
        if mlcount > 2 and melee ~= "Godhuman" then
            syn.request(
                {
                    Url = des .. Player,
                    Method = "POST",
                    Body = tostring(level) .. " " .. tostring(mlcount) .. " " .. os.date("%m/%d/%Y %I:%M:%S %p")
                }
            )
            game:Shutdown()
        elseif melee == "Godhuman" then
            syn.request(
                {
                    Url = des .. Player,
                    Method = "POST",
                    Body = tostring(level) .. " " .. "GOD" .. " " .. os.date("%m/%d/%Y %I:%M:%S %p")
                }
            )
            game:Shutdown()
        else
            syn.request(
                {
                    Url = des .. Player,
                    Method = "POST",
                    Body = tostring(level) .. " " .. tostring(mlcount) .. " " .. os.date("%m/%d/%Y %I:%M:%S %p")
                }
            )
        end
        wait(120)
    end
end
