repeat task.wait() until game:GetService("Players").LocalPlayer
local level
local Player = game:GetService("Players").LocalPlayer.Name
local des    = "http://localhost:7963/SetDescription?Account="
local ali = "http://localhost:7963/SetAlias?Account="
level = game:GetService("Players").LocalPlayer.Data.Level.Value
local sea
if game.PlaceId == 2753915549 then
    sea = 1
elseif game.PlaceId == 4442272183 then
    sea = 2
elseif game.PlaceId == 4442272183 then
    sea = 3
end
syn.request({
    Url    = des.. Player,
    Method = "POST",
    Body   = tostring(level).. " ".. os.date('%m/%d/%Y %I:%M:%S %p')
})
syn.request({
    Url    = ali.. Player,
    Method = "POST",
    Body   = tostring(sea)
})
local timec = 0
local run = true
local run2 = true
local exp = game:GetService("Players").LocalPlayer.Data.Exp.Value
while run do
	timec = timec + 1
    local errorProtect = tick()
    local sea2
    if game.PlaceId == 2753915549 then
        sea2 = 1
    elseif game.PlaceId == 4442272183 then
        sea2 = 2
    elseif game.PlaceId == 4442272183 then
        sea2 = 3
    end             
	-- if game:GetService("Players").LocalPlayer.Data.Level.Value == 1000 then
        -- syn.request({
            -- Url    = des.. Player,
            -- Method = "POST",
            -- Body   = tostring(level).. " ".. os.date('%m/%d/%Y %I:%M:%S %p')
        -- })
		-- game.Players.LocalPlayer:Kick()
    if game:GetService("Players").LocalPlayer.Data.Level.Value > level then
        level = game:GetService("Players").LocalPlayer.Data.Level.Value
		exp = game:GetService("Players").LocalPlayer.Data.Exp.Value
        timec = 0
        syn.request({
            Url    = des.. Player,
            Method = "POST",
            Body   = tostring(level).. " ".. os.date('%m/%d/%Y %I:%M:%S %p')
        })
    end
    if sea2 ~= sea then
        sea = sea2
        syn.request({
            Url    = ali.. Player,
            Method = "POST",
            Body   = tostring(sea)
        })
    end 
    if timec > 60 then
		syn.request({
			Url    = des.. Player,
			Method = "POST",
			Body   = tostring(level).. " ".. os.date('%m/%d/%Y %I:%M:%S %p')
		})
        if game:GetService("Players").LocalPlayer.Data.Level.Value == level and game:GetService("Players").LocalPlayer.Data.Exp.Value == exp then
            run = false
            while run2 do
                local Servers = game.HttpService:JSONDecode(game:HttpGet("https://games.roblox.com/v1/games/".. game.PlaceId.. "/servers/Public?sortOrder=Asc&limit=100"))
                for i,v in pairs(Servers.data) do
                    if v.playing ~= nil and v.playing < 5 then
						game:GetService("StarterGui"):SetCore("SendNotification", { -- Send a notification that it turned off
							Title = "Teleport";
							Text = "Wait for change server.";
						})                
						game:GetService("TeleportService"):Teleport(game.PlaceId, game:GetService("Players").LocalPlayer, v.id)
						--game:GetService('TeleportService'):TeleportToPlaceInstance(game.PlaceId, v.id)
						run2 = false
						break
					end	
                end
                wait(1)
            end    
        else
            timec = 0
            exp = game:GetService("Players").LocalPlayer.Data.Exp.Value
        end     
    end
    wait(1)
end
